from datetime import datetime
import uuid 
import pytz
import dateutil.parser as parser
from exception.exceptions import ValidationError

class Portfolio():
    """
        A data structure representing a Portfolio generated by a trading strategy

        It can be converted into a json document that looks like this:

        {
            'portfolio_id': str,
            'creation_date': iso8601 date,
            'data_date': iso8601 date,
            'strategy_name': str,
            'portfolio':[
                'str', 'str', 'str'
            ]
        }

        Attributes: 
            portfolio_id: User supplied name of the portfolio
            creation_date: Creation time of the portfolio
            data_date: Date context used to source financials.
            strategy_name: Name of the trading strategy used to generate this portfolio
            portfolio: List of recommended tickers
    """

    def __init__(self, creation_date : datetime, data_date : datetime, strategy_name : str, portfolio : list):
        '''
            Initializes the portfolio via parameters
        '''

        if (creation_date is None or data_date is None or strategy_name is None 
            or portfolio is None or len(portfolio) == 0):
            raise ValidationError("One or more parameters is invalid", None)
        

        self.portfolio_id = str(uuid.uuid1())
        self.creation_date = creation_date
        self.data_date = data_date
        self.strategy_name = strategy_name
        self.portfolio = portfolio


    @classmethod
    def from_dict(cls, portfolio_dict : dict):
        '''
            initializes a portfolio from a dictionary or raises a ValidationError
            Date objects are kept in UTC timezone. Clients using this data structure
            are responsible for the localization of time

            Paramters
            ---------
            portfolio_dict : dict A dictionary representation of the portfolio

            Returns
            ---------
            A portfolio instance matching the dictionary

            Raises
            ---------
            ValidationError in case the dictionary is invalid 
        '''
        try:
            portfolio_id = portfolio_dict['portfolio_id']
            creation_date = parser.parse(portfolio_dict['creation_date'])
            data_date =  parser.parse(portfolio_dict['data_date'])
            strategy_name = portfolio_dict['strategy_name']
            portfolio = portfolio_dict['portfolio']
            
            p = cls(creation_date, data_date, strategy_name, portfolio)
            p.portfolio_id = portfolio_id

            return p

        except Exception as e:
            raise ValidationError("Could not initialize Portfolio from dictionary", e)

    def to_dict(self):
        """
            returns a dictionary instance of this portfolio.
            Creation time is automatically converted to UTC, wheras data date is not
        """

        return {
            'portfolio_id': self.portfolio_id,
            'creation_date': self.creation_date.astimezone(pytz.UTC).isoformat(),
            'data_date': self.data_date.isoformat(),
            'strategy_name': self.strategy_name,
            'portfolio': self.portfolio
        }

   
